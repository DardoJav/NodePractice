paths:
  /users:
    get:
      tags: 
        - Users
      security:
        - bearerAuth: []
      summary: Get all users
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags: 
        - Users
      security:
        - bearerAuth: []
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                first_name:
                  type: string
                  required: true
                last_name:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
                  unique: true
                age:
                  type: number
                  required: true
                password:
                  type: string
                  required: true
                cart:
                  type: string
                role:
                  type: string
                last_connection:
                  type: date
              required:
                - first_name
                - last_name
                - email
                - age
                - password
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags: 
        - Users
      security:
        - bearerAuth: []
      summary: Delete users inactives in 30 days
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      tags: 
        - Users
      security:
        - bearerAuth: []
      summary: Get a user by ID
      parameters:
        - name: UserId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags: 
        - Users
      security:
        - bearerAuth: []
      summary: Update a user by ID
      parameters:
        - name: UserId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                first_name:
                  type: string
                  required: true
                last_name:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
                  unique: true
                age:
                  type: number
                  required: true
                password:
                  type: string
                  required: true
                cart:
                  type: string
                role:
                  type: string
                last_connection:
                  type: date
              required:
                - first_name
                - last_name
                - email
                - age
                - password
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags: 
        - Users
      security:
        - bearerAuth: []
      summary: Delete a user by ID
      parameters:
        - name: UserId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/premium/{userId}:
    patch:
      tags: 
        - Users
      security:
        - bearerAuth: []
      summary: Change the role of "user" to "premium" or viceversa
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'